<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:security="http://www.springframework.org/schema/security"
    xmlns:oauth="http://www.springframework.org/schema/security/oauth2"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/util
                           http://www.springframework.org/schema/util/spring-util.xsd
                           http://www.springframework.org/schema/security
                           http://www.springframework.org/schema/security/spring-security.xsd
                           http://www.springframework.org/schema/security/oauth2 
                           http://www.springframework.org/schema/security/spring-security-oauth2.xsd">


  <security:http entry-point-ref="authenticationProcessingFilterEntryPoint" use-expressions="true">
    
    <security:anonymous />
    <security:intercept-url pattern="/pages/login/login" access="permitAll"/>
    <security:intercept-url pattern="/SystemStatus" access="permitAll"/>
    <security:intercept-url pattern="/RequestPassword" access="permitAll"/>
    <security:intercept-url pattern="/RequestAccount" access="permitAll"/>
    <security:intercept-url pattern="/includes/**" access="permitAll"/>
    <security:intercept-url pattern="/images/**" access="permitAll"/>
    <security:intercept-url pattern="/help/**" access="permitAll"/>
    <security:intercept-url pattern="/ws/**" access="permitAll"/>
    <security:intercept-url pattern="/Contact" access="permitAll"/>
    <security:intercept-url pattern="/rest2/openrosa/**" access="permitAll"/>
    <security:intercept-url pattern="/pages/odmk/**" access="permitAll"/>
    <security:intercept-url pattern="/pages/openrosa/**" access="permitAll"/>
    <security:intercept-url pattern="/pages/accounts/**" access="permitAll"/>
    <security:intercept-url pattern="/pages/itemdata/**" access="permitAll"/>
    <security:intercept-url pattern="/pages/auth/api/v1/studies/**" access="permitAll"/>
    <security:intercept-url pattern="/pages/odmss/**" access="permitAll"/>
    <security:intercept-url pattern="/pages/healthcheck/**" access="permitAll"/>
    <security:intercept-url pattern="/pages/api/v1/anonymousform/**" access="permitAll"/>
    <security:intercept-url pattern="/pages/api/v2/anonymousform/**" access="permitAll"/>
    <security:intercept-url pattern="/pages/api/v1/editform/**" access="permitAll"/>
    <security:intercept-url pattern="/pages/auth/api/v1/discrepancynote/**" access="permitAll"/>
    <security:intercept-url pattern="/pages/auth/api/v1/forms/migrate/**" access="permitAll"/>
    <security:intercept-url pattern="/pages/api/v1/forms/migrate/**" access="permitAll"/>
    <security:intercept-url pattern="/pages/auth/api/**" access="permitAll"/>
    <security:intercept-url pattern="/pages/auth/api/v1/system/**" access="permitAll"/>
    <security:intercept-url pattern="/**" access="hasRole('ROLE_USER')" />
    <security:custom-filter position="FORM_LOGIN_FILTER" ref="myFilter" />
    <security:custom-filter position="CONCURRENT_SESSION_FILTER" ref="concurrencyFilter" />
    <security:session-management session-authentication-strategy-ref="sas"/>
    <security:logout success-handler-ref="openClinicaLogoutHandler" logout-url="/j_spring_security_logout"/>
    <security:csrf disabled="true"/>
    
  </security:http>  
 

    <bean id="authenticationProcessingFilterEntryPoint"
          class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
        <constructor-arg name="loginFormUrl" value="/pages/login/login"/>
        <property name="forceHttps" value="false"/>
    </bean>
    
    <bean id="myFilter" class="org.akaza.openclinica.web.filter.OpenClinicaUsernamePasswordAuthenticationFilter">
        <property name="authenticationManager" ref="authenticationManager"/>
        <property name="authenticationFailureHandler" ref="failureHandler" />
        <property name="authenticationSuccessHandler" ref="successHandler" />
        <!-- 
        <property name="authenticationFailureUrl" value="/pages/login/login?action=errorLogin"/>
        <property name="defaultTargetUrl" value="/MainMenu"/>
         -->
        <property name="auditUserLoginDao" ref="auditUserLoginDao"/>
        <property name="configurationDao" ref="configurationDao"/>
        <property name="dataSource" ref="dataSource"/>
        <property name="allowSessionCreation" value="true" />
        <property name="sessionAuthenticationStrategy" ref="sas"/>
        <property name="crfLocker" ref="crfLocker"/>
        <property name="factorService" ref="factorService"/>
        <!-- E-Mail notification -->
        <property name="mailNotificationService" ref="mailNotificationService"/>
    </bean>
    
    <bean id="successHandler" class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler" >
        <property name="defaultTargetUrl" value="/MainMenu" /> <!-- which is the default value -->
    </bean>
    
    <bean id="failureHandler" class="org.springframework.security.web.authentication.ExceptionMappingAuthenticationFailureHandler" >
        <property name="defaultFailureUrl" value="/pages/login/login?action=errorLogin" />
        <property name="exceptionMappings">
            <props>
                <prop key="org.springframework.security.authentication.LockedException">/pages/login/login?action=errorLocked</prop>
                <prop key="org.akaza.openclinica.control.login.AccountConfigurationException">/pages/login/login?action=2faOutdated</prop>
            </props>
        </property>
    </bean>
    
     <bean id="concurrencyFilter" class="org.springframework.security.web.session.ConcurrentSessionFilter">
     	<constructor-arg name="sessionRegistry" ref="sessionRegistry" />
        <constructor-arg name="expiredUrl" value="/MainMenu" />
        <property name="logoutHandlers">
            <list>
               <ref bean="openClinicaLogoutHandler"/>
            </list>
        </property>
     </bean>
     
     <bean id="sessionRegistry" class="org.akaza.openclinica.web.filter.OpenClinicaSessionRegistryImpl">
        <property name="auditUserLoginDao" ref="auditUserLoginDao"/>
        <property name="dataSource" ref="dataSource"/>
         <property name="crfLocker" ref="crfLocker" />
     </bean>
    
    
   
	<bean id="sas"
		class="org.springframework.security.web.authentication.session.CompositeSessionAuthenticationStrategy">
		<constructor-arg>
			<list>
				<bean
					class="org.springframework.security.web.authentication.session.ConcurrentSessionControlAuthenticationStrategy">
					<constructor-arg ref="sessionRegistry" />
					<property name="maximumSessions" value="1" />
					<property name="exceptionIfMaximumExceeded"
						value="false" />
				</bean>
				<bean
					class="org.springframework.security.web.authentication.session.SessionFixationProtectionStrategy">
				</bean>
				<bean
					class="org.springframework.security.web.authentication.session.RegisterSessionAuthenticationStrategy">
					<constructor-arg ref="sessionRegistry" />
				</bean>
			</list>
		</constructor-arg>
	</bean>
    
    <bean id="openClinicaLogoutHandler" class="org.akaza.openclinica.web.filter.OpenClinicaSecurityContextLogoutHandler">
        <property name="auditUserLoginDao" ref="auditUserLoginDao"/>
        <property name="dataSource" ref="dataSource"/>
    </bean>
    
    <bean id="inMemoryTokenStore" class="org.springframework.security.oauth2.provider.token.store.InMemoryTokenStore">
        <property name="flushInterval" value="30"/>
    </bean>

    <bean id="jdbcTokenStore" class="org.springframework.security.oauth2.provider.token.store.JdbcTokenStore">
        <constructor-arg>
            <ref bean="dataSource"/>
        </constructor-arg>
    </bean>

    <bean id="tokenServices"
          class="org.springframework.security.oauth2.provider.token.DefaultTokenServices">
        <property name="tokenStore" ref="inMemoryTokenStore" />
        <property name="supportRefreshToken" value="true" />
        <property name="clientDetailsService" ref="clientDetails" />
    </bean>

    <oauth:client-details-service id="clientDetails">
        <oauth:client client-id="test" authorized-grant-types="password,authorization_code,refresh-token"/>
        <oauth:client client-id="my-trusted-client" authorized-grant-types="password,authorization_code,refresh_token"/>
        <oauth:client client-id="my-less-trusted-client" authorized-grant-types="authorization_code"/>
        <oauth:client client-id="designer" authorized-grant-types="authorization_code,refresh_token"/>
    </oauth:client-details-service>

    <oauth:authorization-server
            client-details-service-ref="clientDetails" token-services-ref="tokenServices">
        <oauth:authorization-code />
        <oauth:implicit />
        <oauth:refresh-token />
        <oauth:client-credentials />
    </oauth:authorization-server>
    
    
    	<bean id="metadataCollectorResource" class="org.akaza.openclinica.web.restful.MetadataCollectorResource" name="metadataCollectorResource">
<property name="dataSource" ref="dataSource"></property>
<property name="ruleSetRuleDao" ref="ruleSetRuleDao"/>
<property name="coreResources" ref="coreResources"/>
<property name = "studyDaoHib" ref = "studyDaoDomain"/>
</bean>
<bean id="odmMetadataRestResource" class="org.akaza.openclinica.web.restful.ODMMetadataRestResource">
	<property name="metadataCollectorResource" ref="metadataCollectorResource"/>
</bean>
<bean id="clinicalDataCollectorResource" class="org.akaza.openclinica.web.restful.ClinicalDataCollectorResource">
<property name = "generateClinicalDataService" ref = "generateClinicalDataService"></property>
</bean>
<bean id="odmClinicalDataRestResource" class="org.akaza.openclinica.web.restful.ODMClinicaDataResource">
	<property name="clinicalDataCollectorResource" ref="clinicalDataCollectorResource"/>
	<property name="metadataCollectorResource" ref="metadataCollectorResource"/>
    <property name="dataSource" ref="dataSource"/>
</bean>
<bean id="openRosaServices" class="org.akaza.openclinica.web.pform.OpenRosaServices">
    <property name="dataSource" ref="dataSource" />
    <property name="coreResources" ref="coreResources" />
    <property name="ruleActionPropertyDao" ref="ruleActionPropertyDao" />
    <property name="pformSubmissionService" ref="pformSubmissionService" />
    <property name="openRosaSubmissionController" ref="openRosaSubmissionController" />
</bean>

<bean id="openRosaSubmissionController" class="org.akaza.openclinica.controller.openrosa.OpenRosaSubmissionController" autowire="byName">
</bean>


</beans>